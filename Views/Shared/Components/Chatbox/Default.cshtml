@model Eshopp.ViewComponents.ChatboxModel
<style>
    /* Chatbox styles (unchanged) */
    .chat-button-container {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
    }

    .chat-button {
        background-color: #00aaff;
        color: white;
        border: none;
        border-radius: 10px;
        padding: 10px 20px;
        cursor: pointer;
        display: flex;
        align-items: center;
        font-size: 16px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

        .chat-button img {
            width: 20px;
            margin-right: 5px;
        }

    .chat-container {
        width: 400px;
        height: 600px;
        position: fixed;
        bottom: 80px;
        right: 20px;
        border: 1px solid #ccc;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        display: none;
        z-index: 1000;
    }

    .chat-header {
        background-color: #00aaff;
        color: white;
        padding: 10px;
        text-align: center;
        font-size: 18px;
        position: relative;
    }

        .chat-header img {
            width: 30px;
            vertical-align: middle;
            margin-right: 10px;
        }

        .chat-header .buttons {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
        }

            .chat-header .buttons span {
                margin-left: 10px;
                cursor: pointer;
            }

    .chat-messages {
        height: 500px;
        overflow-y: auto;
        padding: 10px;
    }

    .message {
        max-width: 70%;
        margin: 10px 0;
        padding: 10px;
        border-radius: 5px;
    }

    .user-message {
        background-color: #e9ecef;
        margin-left: 30%;
        text-align: right;
    }

    .ai-message {
        background-color: #d1e7dd;
        margin-right: 30%;
    }

    .message img {
        width: 20px;
        vertical-align: middle;
        margin-right: 5px;
    }

    .chat-input {
        display: flex;
        padding: 10px;
        background-color: #f8f9fa;
    }

        .chat-input input {
            flex-grow: 1;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-right: 10px;
        }

        .chat-input button {
            padding: 5px 10px;
            background-color: #00aaff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

</style>
<div class="chat-button-container">
    <button class="chat-button" onclick="toggleChatbox()">
        <img src="~/images/chat-icon.png" alt="Chat Icon">
        Trợ lý
    </button>
</div>

<div class="chat-container" id="chatbox">
    <div class="chat-header">
        <img src="~/images/ai-icon.png" alt="AI Icon">
        Trò Chuyện với AI
        <div class="buttons">
            <span>ⓘ</span>
            <span>□</span>
            <span onclick="toggleChatbox()">X</span>
        </div>
    </div>
    <div class="chat-messages" id="chatMessages">
        <div class="message ai-message">
            <img src="~/images/ai-icon.png" alt="AI Icon">
            Chào mừng bạn đến với AI! Tôi có thể giúp gì cho bạn?
        </div>
    </div>
    <div class="chat-input">
        <input type="text" id="chatInput" placeholder="Nhập nội dung chat">
        <button onclick="sendMessage()">Gửi</button>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        function toggleChatbox() {
            const chatbox = document.getElementById('chatbox');
            console.log('Toggling chatbox, current display:', chatbox.style.display);
            chatbox.style.display = chatbox.style.display === 'block' ? 'none' : 'block';
        }

        function sendMessage() {
            const input = document.getElementById('chatInput');
            const message = input.value.trim();
            if (!message) return;

            console.log('Sending message:', message);
            const chatMessages = document.getElementById('chatMessages');
            const userMessageDiv = document.createElement('div');
            userMessageDiv.className = 'message user-message';
            userMessageDiv.textContent = message;
            chatMessages.appendChild(userMessageDiv);

            fetch('http://localhost:8000/query', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    query: message,
                    response_mode: 'default',
                    similarity_top_k: 2
                }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('AI response:', data);
                const aiMessageDiv = document.createElement('div');
                aiMessageDiv.className = 'message ai-message';
                aiMessageDiv.innerHTML = `<img src="~/images/ai-icon.png" alt="AI Icon"> ${data.response || 'No response content'}`;
                chatMessages.appendChild(aiMessageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            })
            .catch(error => {
                console.error('Fetch error:', error);
                const errorMessageDiv = document.createElement('div');
                errorMessageDiv.className = 'message ai-message';
                errorMessageDiv.textContent = `Error: ${error.message}`;
                chatMessages.appendChild(errorMessageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            });

            input.value = '';
        }

        document.getElementById('chatInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });
    });
</script>